package models;

import java.sql.*;
import controllers.Controller;

public class PatientsDao {
	private Controller controller;
	//INSERT
	public String insert(PatientsVo patientsVo) {
		String result="";
		
		Connection connection = null;
		Connections connections = new Connections();
		PreparedStatement preStatement = null;
		
		connection=connections.giveMeConnection();
		String query="INSERT INTO patients VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";
		
		try {
			preStatement = connection.prepareStatement(query);
			preStatement.setInt(1,0);
			preStatement.setString(2, patientsVo.getNamee());
			preStatement.setString(3, patientsVo.getDocument());
			preStatement.setString(4, patientsVo.getDirection());
			preStatement.setString(5, patientsVo.getTelephone());
			preStatement.setString(6, patientsVo.getOperator());
			preStatement.setInt(7, patientsVo.getDaysHospitalization());
			preStatement.setDouble(8, patientsVo.getDrugCost());
			preStatement.setDouble(9, patientsVo.getTotalPay());
			preStatement.setString(10, patientsVo.getCompanyName());
			preStatement.setDouble(11, patientsVo.getCostOfTreatment());
			preStatement.setInt(12, patientsVo.getIdTreatmentFK());
			preStatement.execute();
			
			result="ok";
		}catch(SQLException e) {
			System.out.println("No se pudo registrar el dato: "+ e.getMessage());
			e.printStackTrace();
			result="error";
		}
		
		return result;
	}
	

	//CHECK ALL
	public String[][] checkAll(PatientsVo patientsVo) {
		Connection connection = null;
		Connections connections = new Connections();
		PreparedStatement preStatement = null;
		int tamaño = 0;
		connection = connections.giveMeConnection();
		String[][] dataTable = new String[controller.tableSize()][10];
		String query="SELECT namee,document, direction, telephone, operator, daysHospitalization, drugCost, totalPay, companyName, costOfTreatment  FROM patients";
		try {
			preStatement = connection.prepareStatement(query);
			ResultSet resultTwo = preStatement.executeQuery();
			while(resultTwo.next()) {
				patientsVo.setNamee(resultTwo.getString(1));
				dataTable[tamaño][0] = patientsVo.getNamee();
				
				patientsVo.setDocument(resultTwo.getString(2));
				dataTable[tamaño][1] = patientsVo.getDocument();
				
				dataTable[tamaño][1] = patientsVo.getCostOfTreatment() + "";
				patientsVo.setDirection(resultTwo.getString(3));
				patientsVo.setTelephone(resultTwo.getString(4));
				dataTable[tamaño][3] = patientsVo.getDirection();
				patientsVo.setOperator(resultTwo.getString(5));
				dataTable[tamaño][4] = patientsVo.getTelephone();
				patientsVo.setDaysHospitalization(resultTwo.getInt(6));
				dataTable[tamaño][5] = patientsVo.getOperator();
				patientsVo.setDrugCost(resultTwo.getDouble(7));
				dataTable[tamaño][6] = patientsVo.getDaysHospitalization() + "";
				patientsVo.setTotalPay(resultTwo.getDouble(8));
				dataTable[tamaño][7] = patientsVo.getDrugCost() + "";
				patientsVo.setCompanyName(resultTwo.getString(9));
				dataTable[tamaño][8] = patientsVo.getTotalPay() + "";
				patientsVo.setCostOfTreatment(resultTwo.getDouble(10));
				dataTable[tamaño][9] = patientsVo.getCompanyName();
				tamaño++;
			}
		}catch(SQLException e) {
			System.out.println("No se pudo consultar los datos: "+ e.getMessage());
			e.printStackTrace();
		}
		
		return dataTable;
	}
	
	public void setController(Controller controller) {
		this.controller = controller;
	}


	public int tableSize() {
		int result = 0;
		
		Connection connection = null;
		Connections connections = new Connections();
		PreparedStatement preStatement = null;

		connection = connections.giveMeConnection();
		String query="SELECT COUNT(*)  FROM patients";
		try {
			preStatement = connection.prepareStatement(query);
			ResultSet resultTwo = preStatement.executeQuery();
			while(resultTwo.next()) {
				result = resultTwo.getInt(1);
			}
			resultTwo.close();
		}catch(SQLException e) {
			System.out.println("No se pudo consultar los datos: "+ e.getMessage());
			e.printStackTrace();
		}
		
		return result;
	}

}
